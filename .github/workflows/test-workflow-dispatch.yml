name: Test Action (workflow_dispatch)

on:
  workflow_dispatch:
    inputs:
      falcon_client_id:
        description: "CrowdStrike API Client ID for authentication"
        required: true
      falcon_region:
        description: "CrowdStrike API region. Allowed values are us-1, us-2, eu-1, us-gov-1, us-gov-2"
        required: true
        default: us-1
      version:
        description: "FCS CLI version to use"
        required: false
      config:
        description: "Path to the scan configuration file"
        required: false
      disable_secrets_scan:
        description: "Disable scanning of secrets and passwords in target files"
        required: false
        default: "false"
      fail_on:
        description: "Comma-separated list of which kind of results should return an exit code different from 0"
        required: false
      output_path:
        description: "Path to save the scan results"
        required: false
        default: "./"
      path:
        description: "Path to local file, local directory or git repo to scan (e.g. ./my-local-dir, git::<git repo>, sample-file.tf)"
        required: false
      report_formats:
        description: "Comma-separated list of formats in which reports are to be written (e.g. json,sarif)"
        required: false
      upload_results:
        description: "Upload scan results to the CrowdStrike Falcon Console"
        required: false
        default: "false"

jobs:
  fcs-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Validate input path
        run: |
          # Block path traversal patterns and absolute paths
          if [[ "${{ inputs.path }}" =~ \.\. ]] || [[ "${{ inputs.path }}" =~ ^/ ]]; then
            echo "Security error: Path must not contain '..' (directory traversal) or start with '/' (absolute path)"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test FCS CLI IaC Scan
        uses: ./
        with:
          falcon_client_id: ${{ inputs.falcon_client_id }} # Required
          falcon_region: ${{ inputs.falcon_region }} # Required
          path: ${{ inputs.path }} # Required
          disable_secrets_scan: ${{ inputs.disable_secrets_scan }}
          upload_results: ${{ inputs.upload_results }}
          version: ${{ inputs.version }}
          config: ${{ inputs.config }}
          fail_on: ${{ inputs.fail_on }}
          output_path: ${{ inputs.output_path }}
          report_formats: ${{ inputs.report_formats }}
        env:
          FALCON_CLIENT_SECRET: ${{ secrets.FALCON_CLIENT_SECRET }}

      - name: Show scan results
        run: |
          cat *-scan-results.json
